name: Pipeline de CI/CD

on:
  push:


jobs:
  # Etapa Build
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'  # Cambia la versión de Python si es necesario

      - name: Instalar dependencias
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Asegúrate de tener un archivo requirements.txt

  # Etapa Test
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Instalar dependencias
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Ejecutar pruebas
        run: |
          python -m unittest discover  # Ajusta si tu estructura de pruebas es diferente

  # Etapa Deploy
  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Crear archivo comprimido con el código
        run: |
          tar -czf app-deployment.tar.gz .  # Crea un archivo comprimido con el código listo para distribución
          
      - name: Subir archivo comprimido (opcional)
        uses: actions/upload-artifact@v2
        with:
          name: app-deployment
          path: app-deployment.tar.gz
          
      - name: Desplegar en servidor local (simulado)
        run: |
          echo "Desplegando en servidor local simulado..."
          # Aquí puedes agregar el script de despliegue que necesites para tu servidor


